// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// USER MODELS
model User {
  id Int @id @default(autoincrement())
  firstname String @db.VarChar(50)
  lastname String @db.VarChar(50)
  email String @unique @db.VarChar(100)
  password String @db.VarChar(255)
  createdAt DateTime @default(now())
  id_plan Int
  is_archived Boolean @default(false)
  points_forums Int
  points_courses Int
  tiktok_token String? @unique
  tiktok_username String? @unique

  // Many to many
  challenge Challenge[]
  topic Topic[]
  user_topic User_topic[]
  message Message[]
  user_message User_message[]
}

model Role {
  id Int @id @default(autoincrement())
}

model Ban {
  id Int @id @default(autoincrement())
}

// PLAN MODELS
model Plan {
  id Int @id @default(autoincrement())
  name String @db.VarChar(50)
  description String @db.Text
  price Float
}

// CHALLENGE MODELS
model Challenge {
  id Int @id @default(autoincrement())
  name String @db.VarChar(255)
  id_instrument Int
  date_start DateTime
  date_end DateTime
  description String @db.Text
  hashtag String @db.VarChar(255)

  // Many to many
  user User[]
}

model Results_snapshot {
  id Int @id @default(autoincrement())
}

// CATEGORY MODELS
model Category {
  id Int @id @default(autoincrement())
}

model Instrument {
  id Int @id @default(autoincrement())
}

// COURSE MODELS
model Course {
  id Int @id @default(autoincrement())
}

model Lesson {
  id Int @id @default(autoincrement())
}

model Media {
  id Int @id @default(autoincrement())
}

model Video {
  id Int @id @default(autoincrement())
}

model Timestamp {
  id Int @id @default(autoincrement())
}

model Badge {
  id Int @id @default(autoincrement())
}

model Note {
  id Int @id @default(autoincrement())
}

model User_course {
  id Int @id @default(autoincrement())
}

model User_lesson {
  id Int @id @default(autoincrement())
}


// FORUM MODELS
model Section {
  id Int @id @default(autoincrement())
  name String @db.VarChar(255)
  order Int
}

model Topic {
  id Int @id @default(autoincrement())
  name String @db.VarChar(255)
  creation_date DateTime @default(now())
  author User @relation(fields: [authorId], references: [id])
  authorId Int
  like_count Int

  // Many to many
  user_topic User_topic[]
}

model User_topic {
  user User @relation(fields: [userId], references: [id])
  userId Int
  topic Topic @relation(fields: [topicId], references: [id])
  topicId Int
  is_liked Boolean @default(false)
  is_signalled Boolean @default(false)

  @@id([userId, topicId])
}

model Message {
  id Int @id @default(autoincrement())
  creation_date DateTime @default(now())
  content String @db.Text
  author User @relation(fields: [authorId], references: [id])
  authorId Int
  like_count Int
  signal_count Int

  // Many to many
  user_message User_message[]
}

model User_message {
  user User @relation(fields: [userId], references: [id])
  userId Int
  message Message @relation(fields: [messageId], references: [id])
  messageId Int
  is_liked Boolean @default(false)
  is_signalled Boolean @default(false)

  @@id([userId, messageId])
}

// OTHER MODELS
model Infos_bulle {
  id Int @id @default(autoincrement())
}